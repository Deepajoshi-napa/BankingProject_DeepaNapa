#Define the root logger with the logging level INFO and appender X [appender can be any consoles, files, sockets, NT event logs].

log4j.rootLogger = INFO, X
#2) Set the appender named X to be a File Appender.

log4j.appender.X = org.apache.log4j.FileAppender
#3) Define the layout for the X appender.

log4j.appender.X.layout = org.apache.log4j.PatternLayout
log4j.appender.X.layout.conversionPattern = %m%n

log4j.rootLogger=INFO,stdout,fout
# add a ConsoleAppender to the logger stdout to write to the console.

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
# use a simple message format layout pattern defined is %m%n, which prints logging messages in a newline.

log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%m%n

log4j.appender.fout=org.apache.log4j.FileAppender
# The appender FILE is defined as org.apache.log4j.FileAppender. It writes to a file named SoftwareTestingHelp.

log4j.appender.fout.File=SoftwareTestingHelp.log
# use a more detailed message pattern.

log4j.appender.fout.layout=org.apache.log4j.PatternLayout
log4j.appender.fout.layout.ConversionPattern=%p\t%d{ISO8601}\t%r\t%c\t[%t]\t%m%n